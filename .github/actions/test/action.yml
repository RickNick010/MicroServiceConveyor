name: 'Test Python Greetings App'
description: 'Run tests for Python Greetings application on specified environment'

inputs:
  env_name:
    description: 'Environment name (dev, staging, preprod, prod)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Informational output
      shell: bash
      run: echo "Running tests on ${{ inputs.env_name }} environment..."
    
    - name: Checkout API test framework
      uses: actions/checkout@v4
      with:
        repository: mtararujs/course-js-api-framework
        path: course-js-api-framework
    
    - name: Install test dependencies
      shell: bash
      working-directory: course-js-api-framework
      run: npm install
    
    - name: Create hosts configuration
      shell: bash
      working-directory: course-js-api-framework
      run: |
        # Создаем директорию config, если ее нет
        mkdir -p config
        
        # Определяем порт в зависимости от окружения
        PORT="7001"
        if [ "${{ inputs.env_name }}" == "staging" ]; then
          PORT="7002"
        elif [ "${{ inputs.env_name }}" == "preprod" ]; then
          PORT="7003"
        elif [ "${{ inputs.env_name }}" == "prod" ]; then
          PORT="7004"
        fi
        
        # Создаем файл конфигурации hosts.json
        cat > config/hosts.json << EOF
        {
          "dev": {
            "host": "http://localhost:7001"
          },
          "staging": {
            "host": "http://localhost:7002"
          },
          "preprod": {
            "host": "http://localhost:7003"
          },
          "prod": {
            "host": "http://localhost:7004"
          }
        }
        EOF
        
        # Выводим созданный файл для проверки
        echo "Created hosts.json:"
        cat config/hosts.json
        
        # Проверка доступности сервиса
        echo "Checking service availability on port $PORT..."
        curl -v http://localhost:$PORT/greetings || echo "Service not available or endpoint might be different"
    
    - name: Run tests
      shell: bash
      working-directory: course-js-api-framework
      run: npm run greetings greetings_${{ inputs.env_name }}